generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductCategory {
  Drama
  Comedy
  Documentary
  Horror
  SciFi
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  firstName String?
  lastName  String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Order {
  id         String    @id @default(uuid()) @db.Uuid
  customerId String    @db.Uuid
  productId  String    @db.Uuid
  number     Int       @unique @default(autoincrement())
  date       DateTime? @default(now()) @db.Timestamptz(6)
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)
  createdBy  String?   @db.Uuid
  updatedAt  DateTime  @updatedAt() @db.Timestamptz(6)
  updatedBy  String?   @db.Uuid
  customer   Customer  @relation(fields: [customerId], references: [id])
  product    Product   @relation(fields: [productId], references: [id])

  @@unique([customerId, productId, date])
  @@map("orders")
}

model Customer {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar
  email     String   @unique @db.VarChar
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  createdBy String?  @db.Uuid
  updatedAt DateTime @updatedAt() @db.Timestamptz(6)
  updatedBy String?  @db.Uuid
  orders    Order[]

  @@map("customers")
}

model Product {
  id        String          @id @default(uuid()) @db.Uuid
  name      String          @db.VarChar
  code      String          @unique @db.VarChar
  category  ProductCategory
  price     Int             @db.SmallInt
  createdAt DateTime        @default(now()) @db.Timestamptz(6)
  createdBy String?         @db.Uuid
  updatedAt DateTime        @updatedAt() @db.Timestamptz(6)
  updatedBy String?         @db.Uuid
  orders    Order[]

  @@map("products")
}
